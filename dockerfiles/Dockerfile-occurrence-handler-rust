FROM rust:latest as builder
# Set working directory to the service1 directory
WORKDIR /monorepo

# Copy the service1 source code and lib1 modules
COPY ../apps/rust/productivity_tool/occurrence_tracker /monorepo/apps/rust/productivity_tool/occurrence_tracker
COPY ../apps/rust/productivity_tool/db_updater /monorepo/apps/rust/productivity_tool/db_updater
COPY ../Cargo.toml .
COPY ../Cargo.lock .
COPY ../libs/rust ./libs/rust
COPY ../.env .


RUN apt-get update -y
RUN apt-get install -y libsasl2-dev
RUN apt-get install -y openssl
RUN apt-get install -y musl-tools

#RUN rustup target add x86_64-unknown-linux-musl
#RUN cd /monorepo/apps/rust/productivity_tool/occurrence_tracker && \
#    RUST_LOG=debug cargo build --target x86_64-unknown-linux-musl --release

RUN cargo build --release -p occurrence_tracker
#CMD ["/monorepo/target/release/occurrence_tracker"]

# Create a minimal image for the final stage
FROM debian:bookworm-slim as template-rust

# Set working directory
WORKDIR /monorepo


RUN apt-get update -y
RUN apt-get install -y libsasl2-dev
RUN apt-get install -y openssl
RUN apt-get install ca-certificates
RUN apt-get clean


# Copy the built binary from the builder stage
COPY --from=builder /monorepo/target/release/occurrence_tracker .
COPY --from=builder /monorepo/.env .
#COPY --from=builder /monorepo/apps/rust/productivity_tool/occurrence_tracker/target/x86_64-unknown-linux-musl/release/occurrence_tracker .

# Run the service when the container starts

ENV RUST_LOG=info
CMD ["./occurrency_tracker"]
