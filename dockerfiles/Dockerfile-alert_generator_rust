FROM rust:latest as builder

# Set working directory to the service1 directory
WORKDIR /monorepo

# Copy go.mod and go.sum files to download dependencies
#COPY ../apps/go/productivity_tool/alert_generator/go.mod ./apps/go/productivity_tool/alert_generator/go.mod
#COPY ../apps/go/productivity_tool/alert_generator/go.sum ./apps/go/productivity_tool/alert_generator/go.sum
#COPY ../apps/go/productivity_tool/alert_generator/.env ./apps/go/productivity_tool/alert_generator/.env


# Copy the service1 source code and lib1 modules
COPY ../apps/rust/productivity_tool/alert_generator ./apps/rust/productivity_tool/alert_generator
COPY ../libs/rust ./libs/rust
COPY ../.env ../.env


RUN apt-get update -y
RUN apt-get install -y libsasl2-dev
RUN apt-get install -y openssl

RUN RUST_LOG=debug cargo build
# Create a minimal image for the final stage
FROM golang:1.21.7-bookworm as template-rust

# Set working directory
WORKDIR /app


# Copy the built binary from the builder stage
COPY --from=builder /monorepo/apps/rust/productivity_tool/alert_generator/alert_generator .
#COPY --from=builder /monorepo/.env ./

# Run the service when the container starts

CMD ["./alert_generator"]
